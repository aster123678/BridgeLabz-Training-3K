//Sample Problem 1: School Results Application
//Class Diagram
@startuml
class Student {
  - name : String
  - grade : String
  + getSubjects() : List<Subject>
}

class Subject {
  - name : String
  - marks : int
}

class GradeCalculator {
  + calculateGrade(student: Student) : String
}

Student "1" -- "*" Subject : has >
GradeCalculator --> Student : computes
@enduml
                                                                    ********
//Object Diagram
@startuml
object student1 {
name = "John"
grade = "A"
        }

object subject1 {
name = "Maths"
marks = 90
        }

object subject2 {
name = "Science"
marks = 85
        }

student1 -- subject1
student1 -- subject2
@enduml
                                                                            **********
//Sequence Diagram
@startuml
actor Student
participant GradeCalculator
participant Subject

Student -> GradeCalculator : requestGrade()
GradeCalculator -> Subject : getMarks()
Subject --> GradeCalculator : returnMarks()
GradeCalculator --> Student : returnGrade("A")
@enduml

**************************************************Sample Problem 2: Grocery Store Bill Generation************************************************
Class Diagram
@startuml
class Customer {
  - name : String
  + getProducts() : List<Product>
}

class Product {
  - name : String
  - quantity : int
  - pricePerUnit : double
}

class BillGenerator {
  + generateBill(customer: Customer) : double
}

Customer "1" *-- "*" Product : contains >
BillGenerator --> Customer : computes
@enduml
                                                                        ******
Object Diagram
@startuml
object customer1 {
name = "Alice"
        }

object product1 {
name = "Apples"
quantity = 2
pricePerUnit = 3
        }

object product2 {
name = "Milk"
quantity = 1
pricePerUnit = 2
        }

customer1 *-- product1
customer1 *-- product2
@enduml
                                                                            ***************
Sequence Diagram
@startuml
actor Customer
participant BillGenerator
participant Product

Customer -> BillGenerator : checkout()
BillGenerator -> Product : getPrice(Apples)
Product --> BillGenerator : returnPrice(6)
BillGenerator -> Product : getPrice(Milk)
Product --> BillGenerator : returnPrice(2)
BillGenerator --> Customer : displayBill(8)
@enduml